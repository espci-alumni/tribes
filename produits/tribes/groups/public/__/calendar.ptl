<link href="{~}js/wdCalendar/css/calendar.css" rel="stylesheet">
<link href="{~}js/wdCalendar/css/dailog.css" rel="stylesheet">
<link href="{~}js/wdCalendar/css/dp.css" rel="stylesheet">
<link href="{~}js/wdCalendar/css/alert.css" rel="stylesheet">
<link href="{~}js/wdCalendar/css/main.css" rel="stylesheet">

<script src="{~}js/wdCalendar/src/jquery.js"></script>
<script src="{~}js/wdCalendar/src/Plugins/Common.js"></script>
<script src="{~}js/wdCalendar/src/Plugins/datepicker_lang_FR.js"></script>
<script src="{~}js/wdCalendar/src/Plugins/jquery.datepicker.js"></script>
<script src="{~}js/wdCalendar/src/Plugins/jquery.alert.js"></script>
<script src="{~}js/wdCalendar/src/Plugins/jquery.ifrmdailog.js" defer></script>
<script src="{~}js/wdCalendar/src/Plugins/wdCalendar_lang_US.js"></script>
<script src="{~}js/wdCalendar/src/Plugins/jquery.calendar.js"></script>

<script>
var list = {a$list|js};
var agent = "events";

$(function ()
{
    var op = {
        view: "month",
        theme: 5,
        showday: new Date(),
        EditCmdhandler: Edit,
        DeleteCmdhandler: Delete,
        ViewCmdhandler: View,
        onWeekOrMonthToDay: wtd,
        onBeforeRequestData: cal_beforerequest,
        onAfterRequestData: cal_afterrequest,
        onRequestDataError: cal_onerror,
        autoload: true,
        url: base(agent + '?list=' + list + '&T$=' + antiCSRF),
        quickAddUrl: base(agent + '?list=' + list + '&method=quickadd' + '&T$=' + antiCSRF),
        quickUpdateUrl: base(agent + '?list=' + list + '&method=quickupdate' + '&T$=' + antiCSRF),
        quickDeleteUrl: base(agent + '?list=' + list + '&method=delete' + '&T$=' + antiCSRF)
    };
    var $dv = $("#calhead");
    var _MH = document.documentElement.clientHeight;
    var dvH = $dv.height() + 2;
    op.height = _MH - dvH;
    op.eventItems = [];

    var p = $("#gridcontainer").bcalendar(op).BcalGetOp();

    if (p && p.datestrshow)
    {
        $("#txtdatetimeshow").text(p.datestrshow);
    }
    $("#caltoolbar").noSelect();

    $("#hdtxtshow").datepicker({ picker:"#txtdatetimeshow", showtarget:$("#txtdatetimeshow"),
        onReturn:function (r)
        {
            var p = $("#gridcontainer").gotoDate(r).BcalGetOp();
            if (p && p.datestrshow)
            {
                $("#txtdatetimeshow").text(p.datestrshow);
            }
        }
    });

    function cal_beforerequest (type)
    {
        var t = "Chargement des données du calendrier…";
        switch (type)
        {
            case 1:
                t = "Chargement des données du calendrier…";
                break;
            case 2:
            case 3:
            case 4:
                t = "Traitement de la requête en cours…";
                break;
        }
        $("#errorpannel").hide();
        $("#loadingpannel").html(t).show();
    }

    function cal_afterrequest (type)
    {
        switch (type)
        {
            case 1:
                $("#loadingpannel").hide();
                break;
            case 2:
            case 3:
            case 4:
                $("#loadingpannel").html("Requête effectuée");
                window.setTimeout(function ()
                {
                    $("#loadingpannel").hide();
                }, 2000);
                break;
        }
    }

    function cal_onerror (type, data)
    {
        $("#errorpannel").show();
    }

    function Edit (data)
    {
        function pad (_)
        {
            if (_ < 10)
            {
                return "0" + _;
            }
            else
            {
                return _;
            }
        }

        function format_date_for_url (_)
        {
            return _.getFullYear() + '' + pad(_.getMonth() + 1) + '' + pad(_.getDate());
        }

        var start = format_date_for_url(new Date(data[2]));
        var end = format_date_for_url(new Date(data[3]));

        if (data)
        {
            var url = base(agent + '/edit' + '?list=' + list + '&id=' + data[0] + '&start=' + start + '&end=' + end);
            OpenModelWindow(url, { width:600, height:400, caption:"Édition de l'événement", onclose:function ()
            {
                $("#gridcontainer").reload();
            }});
        }
    }

    function View (data)
    {
        var str = "";
        $.each(data, function (i, item)
        {
            str += "[" + i + "]: " + item + "\n";
        });
        alert(str);
    }

    function Delete (data, callback)
    {
        $.alerts.okButton = "Valider";
        $.alerts.cancelButton = "Annuler";
        hiConfirm("Êtes-vous certain-e de vouloir supprimer cet événement&nbsp;?", 'Confirm', function (r)
        {
            r && callback(0);
        });
    }

    function wtd (p)
    {
        if (p && p.datestrshow)
        {
            $("#txtdatetimeshow").text(p.datestrshow);
        }
        $("#caltoolbar div.fcurrent").each(function ()
        {
            $(this).removeClass("fcurrent");
        })
        $("#showdaybtn").addClass("fcurrent");
    }

    //to show day view
    $("#showdaybtn").click(function (e)
    {
        //document.location.href="#day";
        $("#caltoolbar div.fcurrent").each(function ()
        {
            $(this).removeClass("fcurrent");
        })
        $(this).addClass("fcurrent");
        var p = $("#gridcontainer").swtichView("day").BcalGetOp();
        if (p && p.datestrshow)
        {
            $("#txtdatetimeshow").text(p.datestrshow);
        }
    });

    //to show week view
    $("#showweekbtn").click(function (e)
    {
        //document.location.href="#week";
        $("#caltoolbar div.fcurrent").each(function ()
        {
            $(this).removeClass("fcurrent");
        })
        $(this).addClass("fcurrent");
        var p = $("#gridcontainer").swtichView("week").BcalGetOp();
        if (p && p.datestrshow)
        {
            $("#txtdatetimeshow").text(p.datestrshow);
        }

    });

    //to show month view
    $("#showmonthbtn").click(function (e)
    {
        //document.location.href="#month";
        $("#caltoolbar div.fcurrent").each(function ()
        {
            $(this).removeClass("fcurrent");
        })
        $(this).addClass("fcurrent");
        var p = $("#gridcontainer").swtichView("month").BcalGetOp();
        if (p && p.datestrshow)
        {
            $("#txtdatetimeshow").text(p.datestrshow);
        }
    });

    $("#showreflashbtn").click(function (e)
    {
        $("#gridcontainer").reload();
    });

    /*
     //Add a new event
     $("#faddbtn").click(function (e)
     {
     var url = "edit.php";
     OpenModelWindow(url, { width:500, height:400, caption:"Nouvel événement"});
     });
     */

    //go to today
    $("#showtodaybtn").click(function (e)
    {
        var p = $("#gridcontainer").gotoDate().BcalGetOp();
        if (p && p.datestrshow)
        {
            $("#txtdatetimeshow").text(p.datestrshow);
        }
    });

    //previous date range
    $("#sfprevbtn").click(function (e)
    {
        var p = $("#gridcontainer").previousRange().BcalGetOp();
        if (p && p.datestrshow)
        {
            $("#txtdatetimeshow").text(p.datestrshow);
        }
    });

    //next date range
    $("#sfnextbtn").click(function (e)
    {
        var p = $("#gridcontainer").nextRange().BcalGetOp();
        if (p && p.datestrshow)
        {
            $("#txtdatetimeshow").text(p.datestrshow);
        }
    });

});
</script>

<div style="">
    <div id="calhead" style="padding-left:1px;padding-right:1px;">
        <div class="cHead">
            <div class="ftitle">{"Calendrier du groupe&nbsp;: «&nbsp;"}{a$list}{"&nbsp;»"}</div>
            <div id="loadingpannel" class="ptogtitle loadicon" style="display: none;">{"Chargement des données…"}</div>
            <div id="errorpannel"
                 class="ptogtitle loaderror"
                 style="display: none;">{"Impossible de charger les données du calendrier"}
            </div>
        </div>
        <div id="caltoolbar" class="ctoolbar">
            <!--
            <div id="faddbtn" class="fbutton">
                <div>
                    <span title="Créer un nouvel événement" class="addcal">{"Nouvel événement"}</span>
                </div>
            </div>
            <div class="btnseparator"></div>
            -->
            <div id="showtodaybtn" class="fbutton">
                <div>
                    <span title="Revenir à aujourd'hui" class="showtoday">{"Aujourd'hui"}</span>
                </div>
            </div>
            <div class="btnseparator"></div>
            <div id="showdaybtn" class="fbutton">
                <div>
                    <span title='Day' class="showdayview">{"Jour"}</span>
                </div>
            </div>
            <div id="showweekbtn" class="fbutton">
                <div>
                    <span title='Week' class="showweekview">{"Semaine"}</span>
                </div>
            </div>
            <div id="showmonthbtn" class="fbutton fcurrent">
                <div>
                    <span title='Month' class="showmonthview">{"Mois"}</span>
                </div>
            </div>
            <div class="btnseparator"></div>
            <div id="showreflashbtn" class="fbutton">
                <div>
                    <span title='Refresh view' class="showdayflash">{"Rafraîchir"}</span>
                </div>
            </div>
            <div class="btnseparator"></div>
            <div id="sfprevbtn" title="Précédent" class="fbutton">
                <span class="fprev"></span>
            </div>
            <div id="sfnextbtn" title="Suivent" class="fbutton">
                <span class="fnext"></span>
            </div>
            <div class="fshowdatep fbutton">
                <div>
                    <input type="hidden" name="txtshow" id="hdtxtshow"/>
                    <span id="txtdatetimeshow">→&nbsp;{"Date…"}</span>
                </div>
            </div>
            <div class="clear"></div>
        </div>
    </div>
    <div style="padding:1px;">
        <div>
            <div class="t1 chromeColor">&nbsp;</div>
            <div class="t2 chromeColor">&nbsp;</div>
            <div id="dvCalMain" class="calmain printborder">
                <div id="gridcontainer" style="overflow-y: visible;"></div>
            </div>
            <div class="t2 chromeColor">&nbsp;</div>
            <div class="t1 chromeColor">&nbsp;
            </div>
        </div>
    </div>
</div>
